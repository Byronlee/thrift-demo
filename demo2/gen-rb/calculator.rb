#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'calc_types'

module Calculator
  class Client
    include ::Thrift::Client

    def calc(op)
      send_calc(op)
      return recv_calc()
    end

    def send_calc(op)
      send_message('calc', Calc_args, :op => op)
    end

    def recv_calc()
      result = receive_message(Calc_result)
      return result.success unless result.success.nil?
      raise result.ae unless result.ae.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'calc failed: unknown result')
    end

    def run_task()
      send_run_task()
    end

    def send_run_task()
      send_message('run_task', Run_task_args)
    end
  end

  class Processor
    include ::Thrift::Processor

    def process_calc(seqid, iprot, oprot)
      args = read_args(iprot, Calc_args)
      result = Calc_result.new()
      begin
        result.success = @handler.calc(args.op)
      rescue ::ArithmeticException => ae
        result.ae = ae
      end
      write_result(result, oprot, 'calc', seqid)
    end

    def process_run_task(seqid, iprot, oprot)
      args = read_args(iprot, Run_task_args)
      @handler.run_task()
      return
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Calc_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    OP = 1

    FIELDS = {
      OP => {:type => ::Thrift::Types::STRUCT, :name => 'op', :class => ::ArithmeticOperation}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Calc_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0
    AE = 1

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::DOUBLE, :name => 'success'},
      AE => {:type => ::Thrift::Types::STRUCT, :name => 'ae', :class => ::ArithmeticException}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Run_task_args
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Run_task_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

